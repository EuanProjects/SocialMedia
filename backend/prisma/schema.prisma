// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  privateId         Int       @unique @default(autoincrement())
  picture           String?
  username          String    @unique
  password          String
  friends           User[]    @relation("UserFriends")
  friendOf          User[]    @relation("UserFriends")
  posts             Post[]
  sentRequests      Request[] @relation("Requestor")
  receivedRequests  Request[] @relation("Accepter")
  comments          Comment[]
}

model Post {
  id        String    @id @default(uuid())
  privateId Int       @unique @default(autoincrement())
  picture   String?
  comments  Comment[]
  likes     User[]
  public    Boolean   @default(true)
  date      DateTime  @default(now())
}

model Request {
  id          String @id @default(uuid())
  requestor   User   @relation("Requestor", fields: [requestorId], references: [id], onDelete: Cascade)
  requestorId String
  accepter    User   @relation("Accepter", fields: [accepterId], references: [id], onDelete: Cascade)
  accepterId  String
  date        DateTime @default(now())
}

model Comment {
  id          String @id @default(uuid())
  commenter   User   @relation(fields: [commenterId], references: [id])
  commenterId String
  content     String
  post        Post    @relation(fields: [postId], references: [id])
  postId      String
}